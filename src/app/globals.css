@import 'tailwindcss';
/* Display font for headers: Sora (modern UI font with a bit more character than Manrope) */
@import url('https://fonts.googleapis.com/css2?family=Sora:wght@400;500;600;700;800&display=swap');
@plugin "daisyui" {
  themes: 'cupcake', 'pastel', 'nord', 'business', 'dim';
  darktheme: 'cupcake';
  themeroot: 'html';
  base: true;
  styled: true;
  utils: true;
  logs: false;
}

/* light theme styles for 'pastel' theme */
[data-theme='pastel'] {
  .text-accent {
    color: #2e51b1;
  }
  .bg-accent {
    background-color: #a5c2dd;
  }
  .ring-accent {
    --tw-ring-color: rgba(28, 78, 216);
  }
}

/* light theme styles for 'cupcake' theme */
[data-theme='cupcake'] {
  .text-accent {
    color: #b9a031;
  }
  .bg-accent {
    background-color: #dfdbc6;
  }
  .ring-accent {
    --tw-ring-color: #b9a031;
  }
}

[data-theme='nord'] {
  .text-success-content {
    color: #377947;
  }
  .text-secondary-content {
    color: #3e5c81;
  }
}

/* dark theme styles for 'business' theme */
[data-theme='business'] {
  .text-neutral {
    color: #eee;
  }
  .bg-gray-300 {
    background-color: #474747;
  }
  .bg-neutral {
    background-color: #3d3d3d;
  }
  .bg-neutral-content {
    background-color: #aaa;
  }
  .text-neutral-content {
    color: #f3f4f6;
  }
  .text-accent {
    color: #e47c27;
  }
  .bg-accent {
    background-color: #ffb326;
  }
  .ring-accent {
    --tw-ring-color: #e47c27;
  }
  .tab-active {
    background-color: rgb(59, 59, 59);
  }
}

/* dark theme styles for 'dim' theme */
[data-theme='dim'] {
  .text-neutral {
    color: #eee;
  }
  .bg-gray-300 {
    background-color: #474747;
  }
  .bg-neutral {
    background-color: #525252;
  }
  .bg-neutral-content {
    background-color: #aaa;
  }
  .text-neutral-content {
    color: #f3f4f6;
  }
  .text-base-content {
    color: #f3f4f6;
  }
  .border-base-content {
    border-color: #f3f4f6;
  }
}

a {
  color: inherit;
}

body {
  min-height: 100vh;
}

/* Prevent layout shifts / right-side gap when third-party scroll-lock logic sets
   inline widths or hides scrollbars. We prefer a stable scrollbar gutter and
   ensure the app container keeps the full viewport width while a scroll-lock
   attribute is present (used by some UI libraries). This is a low-risk
   override that avoids visual shifting when modals open. */
:root {
  /* Always reserve space for the scrollbar to avoid layout shifts */
  scrollbar-gutter: stable;
}

:root[data-base-ui-scroll-locked] body {
  /* Prevent scroll when modal is open */
  overflow: hidden !important;
}

/* When a scroll-lock attribute is present, some libs set inline styles that
   reduce the width of the app container (causing a right gap). Force the
   main app containers to stay full-width to avoid the gap. */
:root[data-base-ui-scroll-locked] #__next,
:root[data-base-ui-scroll-locked] main,
:root[data-base-ui-scroll-locked] .__next,
:root[data-base-ui-scroll-locked] .app-root {
  width: 100vw !important;
  max-width: 100vw !important;
  box-sizing: border-box;
}

/* Glassmorphism utilities for navbar and small cards. */
:root {
  --glass-bg: rgba(255, 255, 255, 0.6);
  --glass-bg-dark: rgba(17, 24, 39, 0.5); /* for dark-ish themes */
  --glass-border: rgba(255, 255, 255, 0.5);
  --glass-border-dark: rgba(255, 255, 255, 0.08);
  --glass-blur: 8px;
  --glass-shadow: 0 6px 18px rgba(2, 6, 23, 0.08);
}

/* Respect user preference to reduce motion/blur and avoid backdrop-filter when unavailable */
@media (prefers-reduced-transparency: reduce), (prefers-reduced-motion: reduce) {
  :root {
    --glass-blur: 0px;
  }
}

/* The `nav-glass` class applies a subtle glass effect. It uses backdrop-filter when available,
   falls back to a translucent background otherwise, and adapts for dark themes using the
   page's data-theme attribute (DaisyUI). */
.nav-glass {
  /* Make the nav element itself transparent so content sits visually beneath it.
     Use isolation to create a stacking context so the pseudo-element can sit
     behind the nav's content but above the page for the glass/blur effect. */
  background-color: transparent;
  isolation: isolate;
  box-shadow: var(--glass-shadow);
}

/* Optional overlay behind nav content that provides the glass color + blur while
   keeping the nav element transparent. This prevents a solid rectangle look while
   still letting the navbar 'blend' with the page. */
.nav-glass::before {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  background-color: var(--glass-bg);
  backdrop-filter: blur(var(--glass-blur));
  -webkit-backdrop-filter: blur(var(--glass-blur));
  border-bottom: 1px solid var(--glass-border);
  z-index: -1; /* behind nav content but above page */
}

/* Dark mode adaptation: when DaisyUI sets a dark-ish theme on html[data-theme], switch vars */

html[data-theme='business'] .nav-glass::before,
html[data-theme='dim'] .nav-glass::before,
html[data-theme='nord'] .nav-glass::before {
  background-color: var(--glass-bg-dark);
  border-bottom: 1px solid var(--glass-border-dark);
}

/* On very small screens, reduce blur and shadow for performance */
@media (max-width: 640px) {
  .nav-glass {
    --glass-blur: 2px;
    box-shadow: 0 4px 10px rgba(2, 6, 23, 0.06);
  }
}

/* subtle float animations used on the home hero */
@keyframes float {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-8px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes float2 {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(6px) rotate(2deg);
  }
  100% {
    transform: translateY(0) rotate(0deg);
  }
}

/* Gem 3D-like spin keyframes: rotate on multiple axes to imply depth */
@keyframes gemSpin {
  0% {
    transform: rotateX(8deg) rotateY(0deg) rotateZ(0deg);
  }
  25% {
    transform: rotateX(6deg) rotateY(90deg) rotateZ(6deg);
  }
  50% {
    transform: rotateX(8deg) rotateY(180deg) rotateZ(0deg);
  }
  75% {
    transform: rotateX(10deg) rotateY(270deg) rotateZ(-6deg);
  }
  100% {
    transform: rotateX(8deg) rotateY(360deg) rotateZ(0deg);
  }
}

/* Custom scrollbar using the project's emerald accent (emerald-600 = #059669) */
/* Chromium-based browsers */
::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background-color: #059669; /* emerald-600 */
  border-radius: 9999px;
  border: 3px solid transparent; /* creates padding effect */
  background-clip: padding-box;
}

/* Hide native scrollbar arrow buttons (Chromium/WebKit) used on some Windows themes */
::-webkit-scrollbar-button {
  display: none;
  width: 0;
  height: 0;
}

/* Remove the scrollbar corner background so corner doesn't show a block */

/* DaisyUI tooltip tweaks: limit width and allow wrapping so tooltips don't overflow the page */
.tooltip[data-tip] {
  max-width: 28rem; /* ~448px */
  white-space: normal; /* allow wrapping */
  overflow-wrap: anywhere;
}

.tooltip.tooltip-left {
  /* ensure tooltip aligns to the left of the reference and doesn't exceed viewport */
  transform-origin: right center;
}
::-webkit-scrollbar-corner {
  background: transparent;
}

/* Firefox */
* {
  scrollbar-width: thin;
  scrollbar-color: #059669 transparent;
}

/* Remove default focus outline/box-shadow on interactive form controls across the app
   (per user request). This targets native elements and the DaisyUI `.input` utility.
   Note: removing focus styles can harm keyboard accessibility; consider replacing
   with a visible focus style for keyboard users (e.g. using :focus-visible) if needed. */
input:focus,
input:focus-visible,
textarea:focus,
textarea:focus-visible,
select:focus,
select:focus-visible,
.input:focus,
.input:focus-visible,
button:focus,
button:focus-visible {
  outline: none !important;
  box-shadow: none !important;
}

/* Ensure focus-visible still remains accessible for keyboard users by keeping
   a subtle ring while preserving the border color. */
.btn:focus-visible,
button:focus-visible {
  box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.05) !important;
}

/* Opt-out helper: remove enforced black border for specific controls (sidebar toggles, icons) */
.no-border {
  /* Legacy alias â€” prefer `.btn-icon` for icon-only buttons. */
  border: none !important;
  box-shadow: none !important;
  background-clip: padding-box;
}

/* Tailwind utility for icon-only buttons (semantic, composable). Use `btn-icon` on icon buttons
   to remove the enforced 1px black border while keeping layout and hover states intact. */
@layer utilities {
  .btn-icon {
    @apply border-0 shadow-none bg-transparent;
  }
  /* Opt-in solid black border for elements. Use in markup as `border-on`.
     We set explicit properties to ensure it overrides theme defaults. */
  .border-on {
    border-width: 2px !important;
    border-style: solid !important;
    border-color: #000 !important;
  }
  /* Utility: hide native scrollbars while preserving scroll behavior (scoped usage)
     Apply `no-scrollbar` to the scroll container elements that should not show
     a native scrollbar (for example the tabs container). */
  .no-scrollbar {
    /* Chromium/WebKit */
    -ms-overflow-style: none !important; /* IE and Edge */
    scrollbar-width: none !important; /* Firefox */
  }
  .no-scrollbar::-webkit-scrollbar {
    display: none !important;
    width: 0 !important;
    height: 0 !important;
  }
  /* Some Chromium builds show an overlay scrollbar; hide the track/thumb explicitly */
  .no-scrollbar::-webkit-scrollbar-track,
  .no-scrollbar::-webkit-scrollbar-thumb,
  .no-scrollbar::-webkit-scrollbar-corner {
    background: transparent !important;
    min-height: 0 !important;
    min-width: 0 !important;
  }
  /* Display font utility for headings */
  .display-font {
    font-family: 'Sora', 'Manrope', ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto,
      'Helvetica Neue', Arial;
    font-weight: 700;
    letter-spacing: -0.015em;
  }
}
