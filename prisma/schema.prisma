// Prisma schema for Zenite v2
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  BLOCKED
  DONE
  CANCELED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  name           String?
  hashedPassword String?
  avatarUrl      String?
  role           String    @default("user")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  lastSeenAt     DateTime?

  // relations
  ownedTasks  Task[]       @relation("TaskOwner")
  comments    Comment[]
  attachments Attachment[]
}

model Task {
  id            String       @id @default(uuid())
  title         String
  description   String?
  status        TaskStatus   @default(TODO)
  priority      Priority     @default(MEDIUM)
  dueDate       DateTime?
  startsAt      DateTime?
  completedAt   DateTime?
  estimateMins  Int?
  timeSpentMins Int?
  recurrence    String?
  ownerId       String
  owner         User         @relation("TaskOwner", fields: [ownerId], references: [id])
  tags          Tag[]
  comments      Comment[]
  attachments   Attachment[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  deletedAt     DateTime?

  @@index([ownerId])
  @@index([status])
  @@index([dueDate])
}

model Tag {
  id    String  @id @default(uuid())
  name  String  @unique
  color String?
  tasks Task[]
}

model Comment {
  id        String   @id @default(uuid())
  taskId    String
  authorId  String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  task   Task @relation(fields: [taskId], references: [id])
  author User @relation(fields: [authorId], references: [id])

  @@index([taskId])
  @@index([authorId])
}

model Attachment {
  id         String   @id @default(uuid())
  taskId     String
  uploaderId String
  url        String
  filename   String?
  size       Int?
  mimeType   String?
  createdAt  DateTime @default(now())

  task     Task @relation(fields: [taskId], references: [id])
  uploader User @relation(fields: [uploaderId], references: [id])

  @@index([taskId])
  @@index([uploaderId])
}
